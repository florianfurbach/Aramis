X86 W+RW+WR+WW+po+rfi-po+po
"Rfe PodRW Wse Rfi PodRR Fre PodWW Wse"
Cycle=Rfi PodRR Fre PodWW Wse Rfe PodRW Wse
Relax=
Safe=[Rfi,PodRR] Rfe Fre Wse PodWW PodRW
Prefetch=1:x=F,1:y=W,2:y=F,2:z=T,3:z=F,3:x=W
Com=Rf Ws Fr Ws
Orig=Rfe PodRW Wse Rfi PodRR Fre PodWW Wse
{
}
 P0         | P1          | P2          | P3         ;
 MOV [x],$2 | MOV EAX,[x] | MOV [y],$2  | MOV [z],$1 ;
            | MOV [y],$1  | MOV EAX,[y] | MOV [x],$1 ;
            |             | MOV EBX,[z] |            ;
forall 2:EAX=2 /\ (2:EBX=0 /\ (x=1 /\ (y=1 /\ (1:EAX=0 \/ 1:EAX=1 \/ 1:EAX=2) \/ y=2 /\ (1:EAX=2 \/ 1:EAX=1 \/ 1:EAX=0)) \/ x=2 /\ (y=1 /\ (1:EAX=2 \/ 1:EAX=1 \/ 1:EAX=0) \/ y=2 /\ (1:EAX=0 \/ 1:EAX=1 \/ 1:EAX=2))) \/ 2:EBX=1 /\ (x=1 /\ (y=1 /\ (1:EAX=2 \/ 1:EAX=1 \/ 1:EAX=0) \/ y=2 /\ (1:EAX=0 \/ 1:EAX=1 \/ 1:EAX=2)) \/ x=2 /\ (y=1 /\ (1:EAX=0 \/ 1:EAX=1 \/ 1:EAX=2) \/ y=2 /\ (1:EAX=2 \/ 1:EAX=1 \/ 1:EAX=0)))) \/ 2:EAX=1 /\ y=1 /\ (2:EBX=1 /\ (x=1 /\ (1:EAX=2 \/ 1:EAX=1 \/ 1:EAX=0) \/ x=2 /\ (1:EAX=0 \/ 1:EAX=1 \/ 1:EAX=2)) \/ 2:EBX=0 /\ (1:EAX=0 /\ (x=1 \/ x=2) \/ 1:EAX=2 /\ x=1))
